diff --strip-trailing-cr -Nur gcc-4.8.0.orig/libffi/src/x86/ffi.c gcc-4.8.0/libffi/src/x86/ffi.c
--- gcc-4.8.0.orig/libffi/src/x86/ffi.c	2012-12-27 00:28:02.000000000 +0800
+++ gcc-4.8.0/libffi/src/x86/ffi.c	2013-03-23 22:42:59.570246500 +0800
@@ -324,7 +324,7 @@
 
 #ifdef X86_WIN64
 extern int
-ffi_call_win64(void (*)(char *, extended_cif *), extended_cif *,
+_ffi_call_win64(void (*)(char *, extended_cif *), extended_cif *,
                unsigned, unsigned, unsigned *, void (*fn)(void));
 #elif defined(X86_WIN32)
 extern void
@@ -369,7 +369,7 @@
     {
 #ifdef X86_WIN64
     case FFI_WIN64:
-      ffi_call_win64(ffi_prep_args, &ecif, cif->bytes,
+      _ffi_call_win64(ffi_prep_args, &ecif, cif->bytes,
                      cif->flags, ecif.rvalue, fn);
       break;
 #elif defined(X86_WIN32)
@@ -442,14 +442,14 @@
      __attribute__ ((regparm(1)));
 #endif
 #ifdef X86_WIN64
-void FFI_HIDDEN ffi_closure_win64 (ffi_closure *);
+void FFI_HIDDEN _ffi_closure_win64 (ffi_closure *);
 #endif
 
 /* This function is jumped to by the trampoline */
 
 #ifdef X86_WIN64
 void * FFI_HIDDEN
-ffi_closure_win64_inner (ffi_closure *closure, void *args) {
+_ffi_closure_win64_inner (ffi_closure *closure, void *args) {
   ffi_cif       *cif;
   void         **arg_area;
   void          *result;
@@ -657,7 +657,7 @@
     {
       int mask = FLAG(0)|FLAG(1)|FLAG(2)|FLAG(3);
       FFI_INIT_TRAMPOLINE_WIN64 (&closure->tramp[0],
-                                 &ffi_closure_win64,
+                                 &_ffi_closure_win64,
                                  codeloc, mask);
       /* make sure we can execute here */
     }
